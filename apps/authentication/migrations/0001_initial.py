# Generated by Django 2.2.1 on 2019-05-13 19:22

import authentication.managers
import authentication.mixins
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('uuid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('date_joined', models.DateTimeField(auto_now_add=True, verbose_name='date joined')),
                ('is_active', models.BooleanField(default=True, verbose_name='active')),
                ('is_staff', models.BooleanField(default=False, verbose_name='is staff')),
                ('is_superuser', models.BooleanField(default=False, verbose_name='is superuser')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=30, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=128, null=True, unique=True, verbose_name='email address')),
                ('email_verified_on', models.DateTimeField(blank=True, null=True, verbose_name='email verified on')),
                ('phone_number', models.CharField(max_length=16, unique=True, verbose_name='phone number')),
                ('phone_number_verified_on', models.DateTimeField(blank=True, null=True, verbose_name='phone number verified on')),
                ('image_url', models.URLField(default='https://www.gravatar.com/avatar/85c0bae3b2a1e04908a3c916fbb000f7')),
                ('auth0_user_id', models.CharField(blank=True, max_length=35, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
            },
            bases=(models.Model, authentication.mixins.Auth0UserModelMixin),
            managers=[
                ('objects', authentication.managers.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Token',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('key', models.CharField(db_index=True, max_length=40, verbose_name='Key')),
                ('user_agent', models.CharField(blank=True, max_length=256, null=True)),
                ('ip_address_hash', models.CharField(blank=True, max_length=128, null=True, validators=[django.core.validators.MinLengthValidator(128), django.core.validators.MaxLengthValidator(128), django.core.validators.RegexValidator('[0-9a-f]{128}')])),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='auth_token', to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name': 'Token',
                'verbose_name_plural': 'Tokens',
                'abstract': False,
            },
        ),
    ]
